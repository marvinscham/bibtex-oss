name: Release & Deploy

on:
  release:
    types: [published]

jobs:
  publish:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract version data
        id: version_data
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          echo "::set-output name=release_tag::$RELEASE_TAG"

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v6
        with:
          context: '{{defaultContext}}:backend'
          push: true
          tags: |
            ghcr.io/${{ github.repository }}_backend:latest
            ghcr.io/${{ github.repository }}_backend:${{ steps.version_data.outputs.release_tag }}

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v6
        with:
          context: '{{defaultContext}}:frontend'
          push: true
          tags: |
            ghcr.io/${{ github.repository }}_frontend:latest
            ghcr.io/${{ github.repository }}_frontend:${{ steps.version_data.outputs.release_tag }}

  deploy:
    needs: publish
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: Connect and pull
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
      - name: Cleanup
        run: rm -rf ~/.ssh
